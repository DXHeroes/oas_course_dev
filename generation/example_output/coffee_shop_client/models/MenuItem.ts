/* tslint:disable */
/* eslint-disable */
/**
 * Coffee Shop API
 * API for managing orders and menu in a coffee shop.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@coffeshop.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MenuItemPromotion } from './MenuItemPromotion';
import {
    MenuItemPromotionFromJSON,
    MenuItemPromotionFromJSONTyped,
    MenuItemPromotionToJSON,
    MenuItemPromotionToJSONTyped,
} from './MenuItemPromotion';
import type { MenuItemModifiersInner } from './MenuItemModifiersInner';
import {
    MenuItemModifiersInnerFromJSON,
    MenuItemModifiersInnerFromJSONTyped,
    MenuItemModifiersInnerToJSON,
    MenuItemModifiersInnerToJSONTyped,
} from './MenuItemModifiersInner';

/**
 * A schema representing a menu item.
 * @export
 * @interface MenuItem
 */
export interface MenuItem {
    /**
     * Menu item ID
     * @type {number}
     * @memberof MenuItem
     */
    id: number;
    /**
     * Name of the item
     * @type {string}
     * @memberof MenuItem
     */
    name: string;
    /**
     * Description of the item
     * @type {string}
     * @memberof MenuItem
     */
    description?: string | null;
    /**
     * Price of the item
     * @type {number}
     * @memberof MenuItem
     */
    price: number;
    /**
     * Size of the item
     * @type {string}
     * @memberof MenuItem
     */
    size?: MenuItemSizeEnum;
    /**
     * Additional items that can be added to the menu item
     * @type {Array<string>}
     * @memberof MenuItem
     */
    extraItems?: Array<string>;
    /**
     * Modifiers for the menu item
     * @type {Array<MenuItemModifiersInner>}
     * @memberof MenuItem
     */
    modifiers?: Array<MenuItemModifiersInner>;
    /**
     * 
     * @type {MenuItemPromotion}
     * @memberof MenuItem
     */
    promotion?: MenuItemPromotion;
}


/**
 * @export
 */
export const MenuItemSizeEnum = {
    Small: 'Small',
    Medium: 'Medium',
    Large: 'Large'
} as const;
export type MenuItemSizeEnum = typeof MenuItemSizeEnum[keyof typeof MenuItemSizeEnum];


/**
 * Check if a given object implements the MenuItem interface.
 */
export function instanceOfMenuItem(value: object): value is MenuItem {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    return true;
}

export function MenuItemFromJSON(json: any): MenuItem {
    return MenuItemFromJSONTyped(json, false);
}

export function MenuItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): MenuItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'price': json['price'],
        'size': json['size'] == null ? undefined : json['size'],
        'extraItems': json['extraItems'] == null ? undefined : json['extraItems'],
        'modifiers': json['modifiers'] == null ? undefined : ((json['modifiers'] as Array<any>).map(MenuItemModifiersInnerFromJSON)),
        'promotion': json['promotion'] == null ? undefined : MenuItemPromotionFromJSON(json['promotion']),
    };
}

export function MenuItemToJSON(json: any): MenuItem {
    return MenuItemToJSONTyped(json, false);
}

export function MenuItemToJSONTyped(value?: MenuItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'price': value['price'],
        'size': value['size'],
        'extraItems': value['extraItems'],
        'modifiers': value['modifiers'] == null ? undefined : ((value['modifiers'] as Array<any>).map(MenuItemModifiersInnerToJSON)),
        'promotion': MenuItemPromotionToJSON(value['promotion']),
    };
}

