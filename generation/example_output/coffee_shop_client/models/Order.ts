/* tslint:disable */
/* eslint-disable */
/**
 * Coffee Shop API
 * API for managing orders and menu in a coffee shop.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@coffeshop.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrderItem } from './OrderItem';
import {
    OrderItemFromJSON,
    OrderItemFromJSONTyped,
    OrderItemToJSON,
    OrderItemToJSONTyped,
} from './OrderItem';

/**
 * 
 * @export
 * @interface Order
 */
export interface Order {
    /**
     * Order ID
     * @type {number}
     * @memberof Order
     */
    id?: number;
    /**
     * Customer name
     * @type {string}
     * @memberof Order
     */
    customerName?: string;
    /**
     * Items in the order
     * @type {Array<OrderItem>}
     * @memberof Order
     */
    items?: Array<OrderItem>;
    /**
     * Total order price
     * @type {number}
     * @memberof Order
     */
    totalPrice?: number;
}

/**
 * Check if a given object implements the Order interface.
 */
export function instanceOfOrder(value: object): value is Order {
    return true;
}

export function OrderFromJSON(json: any): Order {
    return OrderFromJSONTyped(json, false);
}

export function OrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Order {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'customerName': json['customer_name'] == null ? undefined : json['customer_name'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(OrderItemFromJSON)),
        'totalPrice': json['total_price'] == null ? undefined : json['total_price'],
    };
}

export function OrderToJSON(json: any): Order {
    return OrderToJSONTyped(json, false);
}

export function OrderToJSONTyped(value?: Order | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'customer_name': value['customerName'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(OrderItemToJSON)),
        'total_price': value['totalPrice'],
    };
}

