/* tslint:disable */
/* eslint-disable */
/**
 * Coffee Shop API
 * API for managing orders and menu in a coffee shop.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@coffeshop.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MenuItemPromotionOneOf
 */
export interface MenuItemPromotionOneOf {
    /**
     * Type of promotion
     * @type {string}
     * @memberof MenuItemPromotionOneOf
     */
    type: MenuItemPromotionOneOfTypeEnum;
    /**
     * Discount amount
     * @type {number}
     * @memberof MenuItemPromotionOneOf
     */
    amount: number;
}


/**
 * @export
 */
export const MenuItemPromotionOneOfTypeEnum = {
    Discount: 'discount'
} as const;
export type MenuItemPromotionOneOfTypeEnum = typeof MenuItemPromotionOneOfTypeEnum[keyof typeof MenuItemPromotionOneOfTypeEnum];


/**
 * Check if a given object implements the MenuItemPromotionOneOf interface.
 */
export function instanceOfMenuItemPromotionOneOf(value: object): value is MenuItemPromotionOneOf {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    return true;
}

export function MenuItemPromotionOneOfFromJSON(json: any): MenuItemPromotionOneOf {
    return MenuItemPromotionOneOfFromJSONTyped(json, false);
}

export function MenuItemPromotionOneOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): MenuItemPromotionOneOf {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'amount': json['amount'],
    };
}

export function MenuItemPromotionOneOfToJSON(json: any): MenuItemPromotionOneOf {
    return MenuItemPromotionOneOfToJSONTyped(json, false);
}

export function MenuItemPromotionOneOfToJSONTyped(value?: MenuItemPromotionOneOf | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'amount': value['amount'],
    };
}

