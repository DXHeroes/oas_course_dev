/* tslint:disable */
/* eslint-disable */
/**
 * Coffee Shop API
 * API for managing orders and menu in a coffee shop.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@coffeshop.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MenuItemPromotionOneOf1
 */
export interface MenuItemPromotionOneOf1 {
    /**
     * Type of promotion
     * @type {string}
     * @memberof MenuItemPromotionOneOf1
     */
    type: MenuItemPromotionOneOf1TypeEnum;
    /**
     * Description of the promotion
     * @type {string}
     * @memberof MenuItemPromotionOneOf1
     */
    description: string;
}


/**
 * @export
 */
export const MenuItemPromotionOneOf1TypeEnum = {
    Bogo: 'bogo'
} as const;
export type MenuItemPromotionOneOf1TypeEnum = typeof MenuItemPromotionOneOf1TypeEnum[keyof typeof MenuItemPromotionOneOf1TypeEnum];


/**
 * Check if a given object implements the MenuItemPromotionOneOf1 interface.
 */
export function instanceOfMenuItemPromotionOneOf1(value: object): value is MenuItemPromotionOneOf1 {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function MenuItemPromotionOneOf1FromJSON(json: any): MenuItemPromotionOneOf1 {
    return MenuItemPromotionOneOf1FromJSONTyped(json, false);
}

export function MenuItemPromotionOneOf1FromJSONTyped(json: any, ignoreDiscriminator: boolean): MenuItemPromotionOneOf1 {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'description': json['description'],
    };
}

export function MenuItemPromotionOneOf1ToJSON(json: any): MenuItemPromotionOneOf1 {
    return MenuItemPromotionOneOf1ToJSONTyped(json, false);
}

export function MenuItemPromotionOneOf1ToJSONTyped(value?: MenuItemPromotionOneOf1 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'description': value['description'],
    };
}

